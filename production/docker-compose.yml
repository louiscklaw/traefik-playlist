# https://doc.traefik.io/traefik/user-guides/docker-compose/acme-tls/

services:
  traefik:
    image: 'traefik:v2.10'
    container_name: 'traefik'
    restart: unless-stopped
    env_file: ./.env
    volumes:
      # - "./volumes/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      # servicing port http 80, https 443,
      - "80:80"
      - "443:443"
      # traefik ui, http://192.168.10.61:8080
      - "8080:8080"
      
    command:
      - --log.level=INFO
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=false

      - --api=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false

      - --entrypoints.web.address=:80

      # NOTE: it is related to the SSL/TLS configuration on cloudflare side, 
      # NOTE: the selected "Encrypt your web traffic" was "Flexible"
      # meaning that the "Encrypts traffic between the browser and Cloudflare"
      # NOTE: encryption provided from user's browser to cloudflare CDN only.
      # NOTE: the encryption between cloudflare to my server is disabled becase the error
      # level=error msg="Unable to obtain ACME certificate for domains \"whoami.louislabs.com\": unable to generate a certificate for the domains [whoami.louislabs.com]: 
      # error: one or more domains had a problem:\n[whoami.louislabs.com] acme: error: 403 :: urn:ietf:params:acme:error:unauthorized :: Cannot negotiate ALPN protocol \"acme-tls/1\" for tls-alpn-01 challenge\n" rule="Host(`whoami.louislabs.com`)" providerName=myresolver.acme ACME CA="https://acme-staging-v02.api.letsencrypt.org/directory" routerName=whoami-louislabs-https@docker

  whoami-louislabs:
    image: 'traefik/whoami'
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami-louislabs-http.rule=Host(`whoami.louislabs.com`)"
      - "traefik.http.routers.whoami-louislabs-http.entrypoints=web"

      # NOTE: container serving 80 port
      - "traefik.http.services.whoami-louislabs-http.loadbalancer.server.port=80"

  whoami-iamon99:
    image: 'traefik/whoami'
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami-iamon99-http.rule=Host(`whoami.iamon99.com`)"
      - "traefik.http.routers.whoami-iamon99-http.entrypoints=web"

      # NOTE: container serving 80 port
      - "traefik.http.services.whoami-iamon99-http.loadbalancer.server.port=80"

  wss-test-host:
    build: wss-test-host
    ports:
      - 3000:3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.helloworld-ws.rule=Host(`wss.louislabs.com`)"
      - "traefik.http.routers.helloworld-ws.entrypoints=web"

      # NOTE: container serving 3000 port
      - "traefik.http.services.helloworld-ws.loadbalancer.server.port=3000"

  # TODO: 2023-Jul-12, remove me as no encrypted traffic between cloudflare and my server anymore.
  #     - "traefik.http.routers.helloworld-ws.middlewares=helloworld-wss"
  #     - "traefik.http.middlewares.helloworld-wss.redirectscheme.scheme=https"

  #     - "traefik.http.routers.helloworld-wss.rule=Host(`wss.louislabs.com`)"
  #     - "traefik.http.routers.helloworld-wss.entrypoints=websecure"

  #     # NOTE: container serving 3000 port
  #     - "traefik.http.services.helloworld-ws.loadbalancer.server.port=3000"

  #     # related to the provider at traefik container
  #     - "traefik.http.routers.helloworld-wss.tls.certresolver=myresolver"

networks:
  default:
    external:
      name: traefik-proxy-network
